# Generated by Django 4.2.7 on 2023-11-21 08:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('questionary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DemandHistorical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_time', models.IntegerField()),
                ('demand', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProbabilisticDensityFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Distribution', help_text='The name of the distribution', max_length=100, null=True)),
                ('distribution_type', models.IntegerField(choices=[(1, 'Normal'), (2, 'Exponential'), (3, 'Logarithmic')], default=1, help_text='The type of the distribution')),
                ('lambda_param', models.FloatField(blank=True, help_text='The lambda parameter for the exponential distribution', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cumulative_distribution_function', models.FloatField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the distribution is active or not')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, help_text='The date the distribution was created')),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='The date the distribution was last updated')),
            ],
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_time', models.CharField(default='day', help_text='The unit of time for the simulation', max_length=100)),
                ('demand_history', models.JSONField(blank=True, help_text='The demand history for the simulation', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('fk_fdp', models.ForeignKey(default=1, help_text='The probabilistic density function associated with the simulation', on_delete=django.db.models.deletion.CASCADE, related_name='fk_fdp_simulation', to='simulate.probabilisticdensityfunction')),
                ('fk_questionary_result', models.ForeignKey(help_text='The questionary result associated with the simulation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='simulations', to='questionary.questionaryresult')),
            ],
        ),
        migrations.CreateModel(
            name='ResultSimulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demand_mean', models.DecimalField(decimal_places=2, help_text='The mean of the demand', max_digits=10)),
                ('demand_std_deviation', models.DecimalField(decimal_places=2, help_text='The standard deviation of the demand', max_digits=10)),
                ('date', models.JSONField(blank=True, help_text='The date of the simulation', null=True)),
                ('variables', models.JSONField(blank=True, help_text='The variables of the simulation', null=True)),
                ('unit', models.JSONField(blank=True, help_text='The unit of the simulation', null=True)),
                ('unit_time', models.JSONField(blank=True, help_text='The unit of time for the simulation', null=True)),
                ('results', models.JSONField(blank=True, help_text='The results of the simulation', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('fk_simulation', models.ForeignKey(default=1, help_text='The simulation associated with the result', on_delete=django.db.models.deletion.CASCADE, related_name='fk_simulation_result_simulation', to='simulate.simulation')),
            ],
        ),
    ]
